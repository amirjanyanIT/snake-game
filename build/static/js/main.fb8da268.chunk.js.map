{"version":3,"sources":["Reducers/Area.js","Reducers/Settings.js","Reducers/Snake.js","Reducers/Game.js","store.js","Components/Main/Init.js","Components/Game/Components/Area/elements/Position.js","Components/Game/Components/Area/Init.js","Components/Game/Components/States.js","Actions/setStartConfigurations.js","Functions/generateRandomNumber.js","Actions/SnakeMovements/eatFruit.js","Actions/SnakeMovements/newFruit.js","Actions/SnakeMovements/moveSnake.js","Actions/SnakeMovements/newTailPart.js","Actions/SnakeMovements/attachTail.js","Actions/SnakeMovements/gameover.js","Components/Game/Init.js","Components/Game/Components/GameOver.js","Components/Init.js","index.js"],"names":["initialState","initalState","resolution","width","height","areaSize","gameSpeed","position","x","y","oldPosition","tailParts","scheduledTailPart","goingTo","fruit","score","status","Reducers","combineReducers","Area","state","action","type","payload","Settings","Snake","console","log","Game","tailLength","Middlewares","applyMiddleware","ReduxThunk","Store","createStore","composeWithDevTools","Main","className","to","Component","Position","color","_","isEqual","this","props","cords","length","tailPart","style","backgroundColor","setCurrentPositionColor","connect","dispatch","map","Row","key","States","createArea","area","i","push","j","generateRandom","max","exludedNumbers","num","Math","floor","random","getState","excludedYaxisNumbers","excludedXaxisNumber","forEach","Set","fruitPosition","generateRandomNumber","moveTo","goTo","eatFruitAction","movedTailParts","isGameOver","which","clearInterval","window","move","setInterval","moveSnakeAction","onKeyDown","onGameKeyDown","bind","tabIndex","GameOver","Init","exact","path","component","MainComponent","GameComponent","GameOverComponent","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.fb8da268.chunk.js","sourcesContent":["\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n\n    switch(action.type){\n        case 'SET_AREA':\n            return action.payload;\n        default:\n            return state;\n    }\n}","const initalState = {\n    resolution:{\n        width:1024,\n        height:768\n    },\n    areaSize:17,\n    gameSpeed:60\n}\n\n\nexport default (state = initalState, action) => {\n\n    switch(action.type){\n\n           default:\n            return state;\n    }\n}","const initialState = {\n    position:{\n        x:0,\n        y:0\n    },\n    oldPosition:{\n        x:0,\n        y:0\n    },\n    tailParts:[],\n    scheduledTailPart:null,\n    goingTo: null,\n    fruit:null\n}\n\n\nexport default (state=initialState, action) => {\n\n    switch(action.type){\n        case 'SET_SNAKE_POSITION':\n            return {\n                ...state,\n                position:{\n                    ...action.payload\n                }\n            }\n        case 'SET_NEW_SCHEDULED_TAIL_PART':\n            return {\n                ...state,\n                scheduledTailPart: action.payload\n            }\n        case 'REMOVE_SCHEDULED_TAIL_PART':\n            return {\n                ...state,\n                scheduledTailPart:null\n            }\n        case 'SET_SNAKE_GOING_TO':\n            return {\n                ...state,\n                goingTo:action.payload\n            }\n        case 'SET_NEW_TAIL_PART':\n            return {\n                ...state,\n                tailParts:[...state.tailParts,action.payload]\n            }\n        case 'SET_MOVED_TAIL_PARTS':\n            return {\n                ...state,\n                tailParts:action.payload\n            }\n        case 'SET_NEW_FRUIT':\n            console.log(action.payload);\n            return {\n                ...state,\n                fruit:action.payload\n            }\n        case 'REMOVE_FRUIT':\n                return {\n                    ...state,\n                    fruit:null\n                }\n        case 'REMOVE_TAIL_PARTS':\n            return {\n                ...state,\n                tailParts:[]\n            }\n        case 'SET_SNAKE_OLD_POSITION':\n            return {\n                ...state,\n                oldPosition:action.payload\n            }\n        default:\n            return state;\n    }\n}","const initialState = {\n    score:0,\n    status:'passive'\n}\n\n\nexport default (state = initialState,action) => {\n\n    switch(action.type){\n        \n        case 'RESET_GAME_SCORE':\n            return {\n                ...state,\n                score:0,\n            }\n        case 'SET_GAME_STATUS':\n            return {\n                ...state,\n                status:action.payload\n            }\n        case 'SET_TAIL_LENGTH':\n            return {\n                ...state,\n                tailLength:action.payload\n            }\n        case 'ADD_SCORE':\n            return  {\n                ...state,\n                score: (state.score + 10)\n            }\n        default:\n            return state;\n    }\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ReduxThunk from 'redux-thunk';\n\nimport Area from './Reducers/Area';\nimport Settings from './Reducers/Settings';\nimport Snake from './Reducers/Snake';\nimport Game from './Reducers/Game';\n\nconst Reducers = combineReducers({ Area,Settings,Snake,Game });\n\nconst Middlewares = applyMiddleware(ReduxThunk)\nconst Store = createStore(Reducers, composeWithDevTools(Middlewares));\n\n\nexport default Store;","import React, { Component } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nclass Main extends Component {\n    render(){\n        return(\n            <div className=\"Main\">\n                <p className=\"game-title typography primary\">SNAKE GAME</p>\n                <div className=\"actions\">\n                    <Link to=\"/Game\"><p className=\"typography primary\">Start</p></Link>\n                    <Link to=\"/Settings\"><p className=\"typography primary\">Settings</p></Link>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\n\nexport default Main;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass Position extends Component {\n\n    setCurrentPositionColor(){\n\n        let color = '#282c34';\n\n        if(_.isEqual(this.props.cords,this.props.Snake.position)){\n            // Snake Position\n            color = '#61d9fa'; \n        }\n\n        if(this.props.Snake.tailParts.length){\n            for(var tailPart of this.props.Snake.tailParts){\n                if(_.isEqual(this.props.cords,tailPart)){\n                    color = '#61d9fa';\n                }\n            }\n        }\n\n        if(this.props.Snake.fruit){\n            if(_.isEqual(this.props.Snake.fruit,this.props.cords)){\n                color =  'purple';\n            }\n        }\n\n        return color;\n    }\n    \n    render(){\n        return (\n            <div \n                className=\"Position\"\n                style={{\n                    backgroundColor:this.setCurrentPositionColor(),\n                    width: (this.props.Settings.resolution.height / (this.props.Settings.areaSize)),\n                }}\n            >\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ Snake,Settings }) => ({ Snake,Settings })\n\nexport default connect(mapStateToProps)(Position);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Position from './elements/Position';\n\nclass Area extends Component {\n\n    componentDidMount(){\n        let fruitPosition = {\n            x:2,\n            y:2\n        };\n        \n        this.props.dispatch({ type:'SET_NEW_FRUIT', payload:fruitPosition });\n    }\n\n    render() {\n        return (\n            <div className=\"Area\" style={{ width: (this.props.Settings.resolution.height) }}>\n                {this.props.Area.map((Row, key) =>\n                    <div\n                        className=\"Row\"\n                        style={{ height: (this.props.Settings.resolution.height / (this.props.Settings.areaSize)), }}\n                        key={key}\n                    >\n                        {Row.map((cords,key) =>\n                            <Position key={key} cords={cords} />\n                        )}\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = ({ Area, Settings, Game, Snake }) => ({ Area, Settings,Game, Snake });\n\nexport default connect(mapStateToProps)(Area);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\n\nclass States extends Component {\n    \n    render(){\n        return (\n            <div className=\"States\" style={{ width: this.props.Settings.resolution.width - this.props.Settings.resolution.height  }}>\n                <ul>\n                    <li>Score&nbsp;&nbsp; {this.props.Game.score} </li>\n                </ul>\n                <div className=\"actions\">\n                    <Link to=\"/\">Menu</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ Game,Settings }) => ({ Game,Settings })\n\nexport default connect(mapStateToProps)(States);","function createArea(areaSize){\n\n    let area = [];\n\n    for(let i=0;i<areaSize;i++){\n        area.push([]);\n        for(let j=0;j<areaSize;j++){\n            area[i].push({\n                y:i,\n                x:j\n            });\n        }\n    }\n\n    return area;\n}\n\nfunction getInitalSnakePosition(areaSize){\n    \n    /* Center of area */\n    return {\n        x:(areaSize / 2 + 0.5),\n        y:(areaSize / 2 + 0.5)\n    }\n\n}\n\n\nexport default () => (dispatch,getState) => {\n\n    const { Settings } = getState();\n\n    dispatch({ type:'SET_AREA', payload: createArea(Settings.areaSize) });\n    dispatch({ type:'RESET_GAME_SCORE' });\n    dispatch({ type:'SET_GAME_STATUS', payload:'passive' });\n    dispatch({ type:'SET_SNAKE_POSITION', payload: getInitalSnakePosition(Settings.areaSize) });\n    dispatch({ type:'REMOVE_TAIL_PARTS' });\n}","function generateRandom(max, exludedNumbers) {\n\n    var num = Math.floor(Math.random() * (max - 0 + 1)) + 0;\n    \n    // eslint-disable-next-line no-unused-vars\n    for(let number of exludedNumbers){\n        if(num === number){\n            console.log({\n                max,\n                exludedNumbers\n            })\n            generateRandom(max,exludedNumbers);\n        }\n        else{\n            console.log(num);\n            return num\n        }\n    }\n}\n\nexport default generateRandom;","import newFruitAction from './newFruit';\n\nimport _ from 'lodash';\n\nexport default () => (dispatch,getState) => {\n\n    const { Snake } = getState();\n\n    if(_.isEqual(Snake.position,Snake.fruit)){\n\n        dispatch({ type:'ADD_SCORE' });\n        dispatch({ type:'REMOVE_FRUIT' });\n        dispatch({ type:'SET_NEW_SCHEDULED_TAIL_PART', payload:Snake.position });\n\n\n\n        dispatch(newFruitAction());\n    }\n}","import generateRandomNumber from '../../Functions/generateRandomNumber';\n\n\nexport default () => (dispatch,getState) => {\n\n    const { Snake,Settings } = getState();\n\n\n    let excludedYaxisNumbers = [Snake.scheduledTailPart.y];\n    let excludedXaxisNumber = [Snake.scheduledTailPart.x];\n\n\n\n    if(Snake.tailParts.length){\n        Snake.tailParts.forEach(tailPart => {\n            excludedYaxisNumbers.push(tailPart.y)\n            excludedXaxisNumber.push(tailPart.x)\n        });\n    }\n    \n    excludedXaxisNumber = [...new Set(excludedXaxisNumber)];\n    excludedYaxisNumbers = [...new Set(excludedYaxisNumbers)];\n\n    \n    let fruitPosition = {};\n\n    fruitPosition.y = generateRandomNumber((Settings.areaSize - 1),excludedYaxisNumbers)\n    fruitPosition.x = generateRandomNumber((Settings.areaSize - 1),excludedXaxisNumber)\n\n\n    \n\n    dispatch({ type:'SET_NEW_FRUIT', payload:fruitPosition });\n}","import eatFruitAction from './eatFruit';\nimport newTailPartAction from './newTailPart';\nimport attachTailAction from './attachTail';\nimport gameoverAction from './gameover';\n\nexport default (moveTo) => (dispatch,getState) => {\n\n    const { Snake,Settings,Game } = getState();\n\n    let goTo = { ...Snake.position };\n        \n    // eslint-disable-next-line\n    switch(moveTo){\n        case 'left':\n\n                Snake.position.x !== 0 ? goTo.x-- : goTo.x = (Settings.areaSize - 1) \n                dispatch({ type:'SET_SNAKE_GOING_TO', payload:moveTo})\n                dispatch({ type:'SET_SNAKE_POSITION', payload:goTo });     \n        break;\n        case 'right':\n\n                Snake.position.x !== (Settings.areaSize - 1) ? goTo.x++ : goTo.x = 0 \n                dispatch({ type:'SET_SNAKE_GOING_TO', payload:moveTo})\n                dispatch({ type:'SET_SNAKE_POSITION', payload:goTo });\n        break;\n        case 'up':\n\n                Snake.position.y !== 0 ? goTo.y-- : goTo.y = (Settings.areaSize - 1)\n                dispatch({ type:'SET_SNAKE_GOING_TO', payload:moveTo})\n                dispatch({ type:'SET_SNAKE_POSITION', payload:goTo });\n        break;\n        case 'down':\n\n                Snake.position.y !== (Settings.areaSize - 1) ? goTo.y++ : goTo.y = 0\n                dispatch({ type:'SET_SNAKE_GOING_TO', payload:moveTo})\n                dispatch({ type:'SET_SNAKE_POSITION', payload:goTo }); \n        break;\n    }\n\n    dispatch({ type:'SET_GAME_STATUS', payload:'active' })\n\n    if(Game.status !== 'passive'){\n        dispatch({ type:'SET_SNAKE_OLD_POSITION', payload:Snake.position });\n    \n        dispatch(eatFruitAction());\n        dispatch(newTailPartAction());\n        dispatch(attachTailAction());\n        dispatch(gameoverAction());\n    }\n}","import _ from 'lodash';\n\nexport default () => (dispatch,getState) => {\n\n    const { Snake } = getState();\n\n    if(Snake.scheduledTailPart && !_.isEqual(Snake.position,Snake.scheduledTailPart)){\n        dispatch({ type:'SET_NEW_TAIL_PART', payload:Snake.scheduledTailPart });\n        dispatch({ type:'REMOVE_SCHEDULED_TAIL_PART' });\n    }\n}","import _ from 'lodash';\n\nexport default () => (dispatch,getState) => {\n    \n    const { Snake } = getState();\n\n    if(Snake.tailParts.length && !_.isEqual(Snake.position,Snake.tailParts[0])){\n\n        let movedTailParts = [];\n        \n        Snake.tailParts.forEach((tailPart,key) => {\n            if(key === 0){\n                movedTailParts.push(Snake.oldPosition);\n            }\n            else{\n                movedTailParts.push(Snake.tailParts[(key-1)]);\n            }\n        })\n\n        dispatch({ type:'SET_MOVED_TAIL_PARTS', payload:movedTailParts });\n    }\n}","import _ from 'lodash';\n\nexport default () => (dispatch,getState) => {\n\n    const { Snake } = getState();\n\n\n    let isGameOver = false;\n\n\n    for(let tailPart of Snake.tailParts){\n\n        if(_.isEqual(Snake.position,tailPart)){\n            isGameOver = true;\n        }\n    }\n\n\n    if(isGameOver){\n        dispatch({ type:'SET_GAME_STATUS', payload:'gameover' });\n    }\n\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n\nimport Area from '../../Components/Game/Components/Area/Init';\nimport States from '../../Components/Game/Components/States';\n\n\nimport setStartConfigurationsAction from '../../Actions/setStartConfigurations';\nimport moveSnakeAction from '../../Actions/SnakeMovements/moveSnake';\n\nclass Game extends Component {\n\n\n    componentDidMount(){\n        console.log(111);\n        this.props.dispatch(setStartConfigurationsAction());\n    }\n    onGameKeyDown({ which }){\n        if( (which >= 37 && which <= 40) || which === 96 ) {\n            // eslint-disable-next-line\n            switch(which){\n                case 37 /* left */:\n                    if(this.props.Snake.goingTo !== 'right'){\n                        clearInterval(window.move);\n                        window.move = setInterval(() => {\n                            this.props.dispatch(moveSnakeAction('left'));\n                        }, this.props.Settings.gameSpeed)\n                    }\n                break;\n                case 38 /* up */:\n                    if(this.props.Snake.goingTo !== 'down'){\n                        clearInterval(window.move);\n                        window.move = setInterval(() => {\n                            this.props.dispatch(moveSnakeAction('up'));\n                        }, this.props.Settings.gameSpeed)\n                    }\n                break;\n                case 39 /* right */:\n                    if(this.props.Snake.goingTo !== 'left'){\n                        clearInterval(window.move);\n                        window.move = setInterval(() => {\n                            this.props.dispatch(moveSnakeAction('right'));\n                        }, this.props.Settings.gameSpeed)\n                    }\n                break;\n                case 40 /* down */:\n                    if(this.props.Snake.goingTo !== 'up'){\n                        clearInterval(window.move);\n                        window.move = setInterval(() => {\n                            this.props.dispatch(moveSnakeAction('down'));\n                        }, this.props.Settings.gameSpeed)\n                    }\n                break;\n                default:\n                    clearInterval(window.move)\n                break;\n            }\n        }\n    }\n    render() {\n        return (\n            <>\n            <div \n                className=\"Game\"\n                onKeyDown={this.onGameKeyDown.bind(this)}\n                tabIndex=\"1\" \n            >\n                <Area />\n                <States />\n            </div>\n\n            { this.props.Game.status === 'gameover' &&\n                <Redirect to=\"/gameover\" />\n            }\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = ({ Settings,Snake,Game }) => ({ Settings,Snake,Game });\n\nexport default connect(mapStateToProps)(Game);","import React,{ Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass GameOver extends Component {\n\n\n    componentDidMount(){\n        clearInterval(window.move);\n    }\n\n\n    render(){\n        return(\n            <>\n            <div className=\"GameOver\">\n                <div className=\"info\">\n                <p className=\"typography secondary\">Game Over</p> \n                <p className=\"typography secondary\">score {this.props.Game.score}</p> \n                </div>\n                <div className=\"actions\">\n                    <Link className=\"typography primary\" to=\"/Game\">Try Again</Link>\n                    <br />\n                    <Link className=\"typography primary\" to=\"/\">Menu</Link>\n                </div>\n            </div>\n            {this.props.Game.status === 'passive' &&\n                <Redirect to=\"/Game\" />\n            }\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = ({ Game }) => ({ Game });\n\nexport default connect(mapStateToProps)(GameOver);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport MainComponent from './Main/Init';\nimport GameComponent from './Game/Init';\nimport GameOverComponent from './Game/Components/GameOver.js'\n\nclass Init extends Component {\n    render(){\n        return(\n            <div \n                className=\"Snake-game\"\n                style={{\n                    width:this.props.Settings.resolution.width,\n                    height:this.props.Settings.resolution.height\n                }}\n            >\n                <Router>\n                    <Route exact path=\"/\" component={MainComponent} />\n                    <Route exact path=\"/Game\" component={GameComponent} />\n                    <Route exact path=\"/gameover\" component={GameOverComponent} />\n                    {/* <Route exact path=\"/Settings\" component={} /> */}\n                </Router>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    Settings:state.Settings\n});\n\nexport default connect(mapStateToProps)(Init);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nimport Init from './Components/Init';\n\nimport './Styles/root.css';\nimport './Styles/reset.css';\nimport './Styles/unic.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Init />\n    </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}